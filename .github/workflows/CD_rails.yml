# This is a basic workflow to help you get started with Actions

name: cd rails

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ deploy ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    env:
      CI: false # consider warning as error

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2 # NEEDED otherwise the files of the repo won't be here

      - name: Create config for production
        env:
          RAILS_ENV: production
          DB_PORT: 3307
          DB_NAME: app_cd
          DB_HOST: 127.0.0.1
          SECRET_KEY_BASE: ${{secrets.MASTER_KEY}}
        run: |
          sudo touch /.env
          echo "JWT_SECRET='${{secrets.JWT_SECRET}}'" >> .env
          echo "EMAIL='${{secrets.EMAIL}}'
          echo "EMAIL_PASSWORD='${{secrets.EMAIL_PASSWORD}}'
          touch config/master.key
          echo "${{secrets.MASTER_KEY}}" >> config/master.key
          echo "" >> config/database.yml
          echo "production:" >> config/database.yml
          echo "  secret_key_base: ${{secrets.MASTER_KEY}}" >> config/database.yml
          echo "  adapter: mysql2" >> config/database.yml
          echo "  encoding: utf8" >> config/database.yml
          echo "  database: app_cd" >> config/database.yml
          echo "  username: ${{secrets.DB_USERNAME}}" >> config/database.yml
          echo "  password: ${{secrets.DB_PASSWORD}}" >> config/database.yml
          echo "  host: 127.0.0.1" >> config/database.yml
          echo "  port: 3307" >> config/database.yml
          echo "secret_key_base: ${{secrets.MASTER_KEY}}" >> config/database.yml

      - name: Create SSH Key file
        run: touch SSH.pem

      - name: Write SSH key
        run: echo "${{secrets.SSH}}" > SSH.pem

      - name: Change permission
        run: chmod 600 SSH.pem
        
      - name: Stop the service
        run : sudo ssh -o StrictHostKeyChecking=no -T ubuntu@ec2-3-69-174-49.eu-central-1.compute.amazonaws.com -i "SSH.pem" "sudo systemctl stop notething && sudo rm -rf backend"

      - name: Copy app files to AWS
        run : rsync -rave "ssh -o StrictHostKeyChecking=no -i SSH.pem" ./ ubuntu@ec2-3-69-174-49.eu-central-1.compute.amazonaws.com:/home/ubuntu/backend

      - name: Execute script on server
        run: sudo ssh -o StrictHostKeyChecking=no -T ubuntu@ec2-3-69-174-49.eu-central-1.compute.amazonaws.com -i "SSH.pem" " chmod 777 ./backend/scripts/script.sh && ./backend/scripts/script.sh &"
   
